map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80;
  server_name _;
  root /usr/share/nginx/html;
  index index.html;
  client_max_body_size 50M;
  # DNS interno do Docker para resolver nomes de serviços/containers
  resolver 127.0.0.11 ipv6=off valid=10s;
  # Deferir resolução de DNS para tempo de requisição (evita falha no boot)
  set $api_upstream http://server:3000;
  set $socket_upstream http://server:3000;

  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  location /api/ {
    proxy_pass $api_upstream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
  }

  location /socket.io/ {
    proxy_pass $socket_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_buffering off;
  }

  location / {
    try_files $uri /index.html;
  }
}
